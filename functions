#!/bin/zsh

function batch-rename {
  local PATTERN="s/$1/$2/g"
  for i in ./* ; do mv $i $(echo $i | sed -e $PATTERN) ; done;
}

function cdr {
  cd $(git rev-parse --show-toplevel 2> /dev/null)
}

function gl {
  if [[ $1 == "" ]]; then
    local LIMIT=20
  else
    local LIMIT=$1
  fi
  local HASH="%C(yellow)%h%C(reset)"
  local RELATIVE_TIME="%C(green)%ar%C(reset)"
  local AUTHORS="%C(bold blue)%an%C(reset)"
  local REFS="%C(red)%d%C(reset)"
  local SUBJECT="%s"
  local FORMAT="$HASH{$RELATIVE_TIME{$AUTHORS{$REFS $SUBJECT"
  git log --graph --color --pretty="tformat:$FORMAT" -$LIMIT | column -t -s '{' | less -FXRS
}

function join-videos {
  ls -f $@ | perl -ne 'print "file $_"' | ffmpeg -protocol_whitelist file,tcp,http,pipe -f concat -i - -c copy joined.mp4
}

function kill-on-port {
  sudo lsof -iTCP -sTCP:LISTEN -n -P | grep ${1} | awk '{ print $2 }' | xargs kill -9;
}

function num-rename {
# rename all files in directory with a given extension to a number starting with 1 and padded with 2 zeros
  rename -N 001 's/.*/$N.jpeg/' *.jpeg
}

function sentry-link {
  SENTRY_JS_PACKAGES=(browser core hub integrations minimal node serverless tracing types utils);

  for package in $SENTRY_JS_PACKAGES; do
    yarn link @sentry/$package
  done
}

function what-is-listening {
  sudo lsof -iTCP -sTCP:LISTEN -n -P | grep ${1}
}
